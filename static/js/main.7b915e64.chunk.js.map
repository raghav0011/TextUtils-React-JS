{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","split","length","defaultProps","aboutText","Alert","alert","class","role","word","lower","capitalize","msg","App","setMode","_useState3","_useState4","bluemode","setBlueMode","_useState5","_useState6","setAlert","messsage","setTimeout","about","document","body","toggleModeBlue","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7b915e64.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    {/* <div className={`form-check form-switch text-${props.bluemode === 'light' ?'light' : 'dark'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleModeBlue} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Blue DarkMode</label>\r\n                        </div> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ?'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = { title: propTypes.string.isRequired,\r\n                        aboutText : propTypes.string.isRequired}\r\n    \r\nNavbar.defaultProps={ title: 'Set title here',\r\n                            aboutText : 'Set about here',}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\" , \"success\");\r\n    }\r\n\r\n    const handleloClick = ()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase-!\" , \"success\");\r\n    }\r\n    \r\n    const handleCapitalizedClick = ()=>{\r\n        let newText=text.charAt(0).toUpperCase() + text.slice(1);\r\n        setText(newText)\r\n        props.showAlert(\"Capitalized the word!\" , \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText=\"\";\r\n        setText(newText)\r\n        props.showAlert(\"Cleared the text\" , \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('')\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark' ?'white' : 'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ?'grey' : 'white', color: props.mode === 'dark' ?'white' : 'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleloClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCapitalizedClick}>Capitalized Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode === 'dark' ?'white' : 'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} character</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text: 'Enter something above to preview here.'}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter  as Router} from \"react-router-dom\";\n// import { Routes } from \"react-router-dom\";\n// import { Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [bluemode, setBlueMode] = useState('light')\n  const [alert, setAlert] = useState(null);\n\nconst showAlert =(messsage, type)=>{\n  setAlert({\n    msg: messsage,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\n\nconst toggleMode = ()=>{\n  if(mode==='light'){\n    setMode('dark')\n    document.body.style.backgroundColor = 'grey';\n    showAlert(\"Dark mode has been enabled\", \"success\");\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\", \"success\");\n  }\n}\nconst toggleModeBlue = ()=>{\n  if(bluemode==='light'){\n    setBlueMode('green')\n    document.body.style.backgroundColor = 'green';\n    showAlert(\"Blue Dark mode has been enabled\", \"success\");\n  }\n  else{\n    setBlueMode('light')\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\", \"success\");\n  }\n}\n\n  return (\n  <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode} toggleModeBlue={toggleModeBlue}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}>\n            </Route> */}\n            {/* <Route exact path=\"/\" element={ */}\n            <TextForm heading=\"Lado\"  mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>\n    {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}